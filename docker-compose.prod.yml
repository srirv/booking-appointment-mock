version: '3.8'

services:
  app:
    image: ${DOCKER_REGISTRY:-localhost}/apollo-appointment-api:${TAG:-latest}
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://neondb_owner:npg_CvI6TxzS7Lal@ep-fancy-lab-a5kqy0m9-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require
      - API_PREFIX=/v1
      - DEBUG=False
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    networks:
      - frontend
    command: >
      bash -c "
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 4
      "

  # Run migrations before deploying the main application
  migrations:
    image: ${DOCKER_REGISTRY:-localhost}/apollo-appointment-api:${TAG:-latest}
    environment:
      - DATABASE_URL=postgresql://neondb_owner:npg_CvI6TxzS7Lal@ep-fancy-lab-a5kqy0m9-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require
    command: >
      bash -c "
        echo 'Running production database migrations...' &&
        python -m migrations.migrate_datetime_to_date_time &&
        echo 'Migrations completed successfully!'
      "
    restart: "no"
    networks:
      - frontend

  # Add nginx for SSL termination and request routing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - frontend
    restart: unless-stopped

networks:
  frontend:

volumes:
  postgres_data: 